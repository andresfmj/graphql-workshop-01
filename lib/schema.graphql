"Valida los tipos de nivel"
enum Level {
    principiante
    intermedio
    avanzado
}

union GlobalSearch = Course | Student | Monitor

type Course {
    _id: ID!
    title: String
    teacher: String
    description: String
    topic: String @deprecated
    students: [Student]
    level: Level
}

interface Person {
    _id: ID!
    name: String!
    email: String!
}

type Student implements Person {
    _id: ID!
    name: String!
    email: String!
    avatar: String
}

type Monitor implements Person {
    _id: ID!
    name: String!
    email: String!
    phone: String
}

type Query {
	# "Retorna un saludo"
	# hello: String
	# "Retorna otro saludo"
	# saludo: String
    "Devuelve todos los cursos"
    getCourses: [Course]
    "Devuelte un curso"
    getCourse(id: ID!): Course
    "Devolver todos los estudiantes"
    getPeople: [Person]
    "Devolver un solo estudiante"
    getPerson(id: ID!): Person
    "Ejecuta una busqueda global"
    searchItem(keyword: String!): [GlobalSearch]
}

input CourseInput {
    title: String!
    teacher: String
    description: String!
    topic: String
    level: Level
}
input CourseEditInput {
    title: String
    teacher: String
    description: String
    topic: String
    level: Level
}

input PersonInput {
    name: String!
    email: String!
    phone: String
    avatar: String
}
input PersonEditInput {
    name: String
    email: String
    phone: String
    avatar: String
}

type Mutation {
    "Crea un curso"
    createCourse(input: CourseInput!): Course
    "Edita un curso"
    editCourse(id: ID!, input: CourseEditInput): Course
    "Crea un estudiante"
    createPerson(input: PersonInput!): Person
    "Edita un estudiante"
    editPerson(id: ID!, input: PersonEditInput): Person
    "Agregar estudiantes a un curso"
    addStudent(courseId: ID!, studentId: ID!): Course
}
